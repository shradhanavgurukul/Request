{
    "course": {
        "id": "99",
        "name": "Files",
        "logo": "http://navgurukul.org/img/sqlogo.jpg",
        "notes": null,
        "days_to_complete": "10",
        "short_description": "Iss topic mai hum Files ke bare mai janege",
        "type": "html",
        "course_type": null,
        "lang_available": [
            "en"
        ],
        "exercises": [
            {
                "id": "4064",
                "parent_exercise_id": "4064",
                "course_id": "99",
                "name": "Files in Python",
                "slug": "files__files/files-intro_md",
                "sequence_num": 0,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/files/files/files-intro.md",
                "solution": null,
                "content": [
                    {
                        "type": "markdown",
                        "value": "How to Work with `Files`?\n\nHum `python` se apne computer jo bhi koi `files` hain, unko padh sakte hain aur saath hi saath nayi `files` bana ke unme data bhi daal sakte hain. Isse hum bahot interesting cheezein kar sakte hain. Jaise hum user se kuch `python` mein `input` leke, uss data se ek HTML `file` bana sakte hain. Aur bhi bahot saare interesting kaam kar sakte hain.\n\n\n\nInn examples se hum `python` se `files` ko padhna aur nayi `files` banana seekhenge. Abhi tak aap jo bhi programs bana rahe the, woh sirf kuch `terminal` pe print kar dete hain. Lekin `python` ka use kar ke hum apne computer pe `files` ke andar ke data ko padh sakte hain, aur nayi `files` bana ke unme data `save` bhi kar sakte hain. Iss example mein hum ek `file` khol ke uss `file` ka data nikalenge.\n\n\n\nIss ke liye ek `people1.txt` naam ki `file` mein neeche diye hue text ko `save` karo.\n\n\n\n```\npriyanka - shimla\nneela - delhi\nsashi - jaipur\nsarika - delhi\ndeepti - shimla\nharshad - delhi\ntrishna - delhi\npradeep - jaipur\nsekhar - delhi\nnand - delhi\nanoop - delhi\nbalwinder - jaipur\n```\nIss `file` ko same folder mein `save` karo jisme aap apne `python` ka `code` likhne waali `file` ko `save` karoge.\n\n\n\nAb yeh `code` likh kar `python` `file` chalao:\n\n\n\n"
                    },
                    {
                        "type": "python",
                        "value": {
                            "code": "my_file = open(\"people1.txt\")\nfile_data = my_file.read()\nprint (file_data)\nmy_file.close()",
                            "testCases": []
                        }
                    },
                    {
                        "type": "markdown",
                        "value": "Yahan dekho kaise iss `file` ka sara data yahan print ho gaya. `Python` humein `open` function deta hai jis ka use kar ke, hum ek `file` khol sakte hain. Yahan humne `open` function ko `file` ka relative path diya hai. Yahan hum `open` ko `file` ka absolute path bhi de sakte hain.\n\n\n\nJaise hi hum `file` kholte hain, humein `my_file` `variable` mein ek `file` milti hai. `my_file` ka `read` function use kar ke hum iss `file` ke andar ka saara data read kar sakte hain. `read` function ka use kar ke humein `file` ke andar ka saara data `string` ke roop mein milta hai.\n\n\n\nAgli line mein humne print ka use kar ke `file` ke saare andar ke saare contents ko print karva diya hai. Yeh woh same contents hain jo aapko `people1.txt` waali `file` ko khol ke dikhenge.\n\n\n\nHum jab bhi `file` kholte hain, humein uske baad my_`file`.close() ka use kar ke `file` band karni bhi zaroori hoti hai. Neeche hum iske baare mein aur baat karenge.\n\n\n\nMaking new `Files`\n\nAb hum ek nayi `file` bana ke usme kuch data likhenge. Yeh karne ke liye hum neeche diye gaye `code` ko likhenge. Iss `code` se hum apni `file` mein kuch `strings` likhenge\n\n\n\n"
                    },
                    {
                        "type": "python",
                        "value": {
                            "code": "my_file2 = open(\"people2.txt\", \"w\")\nmy_file2.write(\"Abhishek - Gurgaon\")\nmy_file2.write(\"Ranveer - Delhi\")\nmy_file2.close()",
                            "testCases": []
                        }
                    },
                    {
                        "type": "markdown",
                        "value": "Yahan humein pehle `open` method ka use kar ek `file` kholi. Kyunki hum Yahan ek nayi `file` banana chahte hain, toh hum `open` function ek aur \"w\" wala argument bhi denge. Yahan \"w\" `python` ko batata hai ki hum `file` mein write/likhna chahte hain. Jab hum `file` mein `write` likhte hain toh agar uss naam ki `file` nahi hoti, toh `python` humare liye nayi `file` bana deti hai. Yeh `file` ussi directory mein banti hai, jis directory mein aap apne `terminal` mein ho. \n\n\n\nFir humne `write` function ka use kar ke apni `file` mein pehle `\"Abishek - Gurgaon\"` likha aur fir `\"Ranveer - Delhi\"` likha.\n\n\n\nLast mein humein `my_file2.close` call kiya. Jab hum `file` write kar rahe hote hain, toh close `python` ko do cheezein batata hai:\n\n\n\n1. Humne `write` function ka use karke jo bhi likha hai, usko `save` kar do.\n\n2. Ab iss `file` ko band kar do kyunki humein iski zaroorat nahi hai.\n\n\n\nAb aap jab apni nayi `file` `people2.txt` khol ke dekhoge, toh aapko uss `file` mein kuch content dikhega. Lekin aapko yeh saara content. Ek line mein dikha, na ki alag alag lines mein jaise aapne socha tha.\n\n\n\nIske baare mein hum agle section mein baat karenge. Humari `file` mein yeh aisa dikhega.\n\n\n\n\n```\nAbhishek - GurgaonRanveer - Delhi\n```\nIsko do alag lines mein laane ke baare mein neeche padhenge.\n\n\n\n`Python` mein iss `code` ko chala ke dekho. Iske baad hum isko dhang se samjhenge.\n\n\n\n\n"
                    },
                    {
                        "type": "python",
                        "value": {
                            "code": "print (\"AbhishekRanveer\")\nprint (\"---------------------------------\")\nprint (\"Abhishek\\nRanveer\")\nprint (\"---------------------------------\")\nprint (\"Abhishek\\n\\nRanveer\")\nprint (\"---------------------------------\")",
                            "testCases": []
                        }
                    },
                    {
                        "type": "markdown",
                        "value": "Yahan beech ki \"-----\" lines humne aise hi padhne mein aasani ke liye print kari hain.\n\n\n\n1. Pehli print mein humne \"Abhishek - Gurgaon\" aur \"Ranveer - Delhi\" mein koi space nahi diya. Isliye woh ek hi line mein print hote hain.\n\n2. Dusri line mein humne \"Abhishek - Gurgaon\" aur \"Ranveer - Delhi\" ke beech mein ek `\\n` diya hai. Isko new line character kehte hain. Jab yeh print hota hai toh yeh `\\n` ki jagah ek nayi line ki tarah print hota hai. Isiliye dono \"Abhishek\" aur \"Ranveer\" ek ke neeche ek print hote hain.\n\n3. Teesri line mein hunne 2 `\\n` daale hain \"Abhishek\" aur \"Ranveer\" ke beech mein. Isliye jab yeh print hote hain, toh inke beech mein ek khaali line aati hai. Pehle `\\n` se ek ke neeche ek aa jate hain, aur dusre se inke beech mein ek nayi line aa jati hain.\n\n\n\n\nIssi tareeke se humare `file` writing/likhne waale example mein, dono `\"Abhishek - Gurgaon\"` aur `\"Ranveer - Delhi\"` ke beech mein new line nahi aati hai. Kyuki jab hum `write` function se `file` mein likhte hain, toh `python` apne aap new line nahi daalta hai. Ab hum same cheez new line ke saath karenge.\n\n\n\n"
                    },
                    {
                        "type": "python",
                        "value": {
                            "code": "my_file3 = open(\"people3.txt\", \"w\")\nmy_file3.write(\"Abhishek - Gurgaon\\n\")\nmy_file3.write(\"Ranveer - Delhi\")\nmy_file3.close()",
                            "testCases": []
                        }
                    },
                    {
                        "type": "markdown",
                        "value": "    \n\nYahan kyunki humne \"Abhishek - Gurgaon\" ke baad ek \"\\n\" laga diya, ab yeh dono alag alag line mein aayenge. Ab `file` khol ke dekho. Woh waise dikhegi jaisi. Hum chahte the. Aisi:\n\n\n\n```\nAbhishek - Gurgaon\nRanveer - Delhi\n```\nAap yeh soch sakte ho ki agar hum \"\\n\" ka use kar ke ek nayi line daal sakte hain toh humne yahan do baar `write` function kyun use kiya. Yeh humne sirf apni aasani ke liye kiya. Hum do `write` ki jagah yeh bhi likh sakte hain:\n\n\n\n"
                    },
                    {
                        "type": "python",
                        "value": {
                            "code": "my_file3.write(\"Abhishek - Gurgaon\\nRanveer - Delhi\")",
                            "testCases": []
                        }
                    },
                    {
                        "type": "markdown",
                        "value": "Yeh kar ke bhi humari `file` same hi dikhegi.\n\n\n\nAb hum aisa `code` likhenge jisse hum ek html `file` bana sakte hain. Socho humare paas ek list hai jisme navgurukul ke saare students ke naam hain. Ab humne ek HTML page mein yeh list dikhani hai. Toh hum uske liye yeh kar `code` likh sakte hain.\n\n\n\n"
                    },
                    {
                        "type": "python",
                        "value": {
                            "code": "batch1_students = [\"Shivam\", \"Rahul\", \"Kavay\", \"Dhannu\", \"Deepanshu\", \"Nitin\", \"Manoj\", \"Shakrudin\", \"Tara\", \"Suraj\", \"Krishna\"]\nstudents_file = open(\"navgurukul_students.html\", \"w\")\nstudents_file.write(\"<html>\\n\")\nstudents_file.write(\"<head>\\n\")\nstudents_file.write(\"<title>NavGurukul Students</title>\\n\")\nstudents_file.write(\"</head>\\n\")\nstudents_file.write(\"<body>\\n\")\nstudents_file.write(\"<ul>\")\nfor student in batch1_students:\n    students_file.write(\"<li>\" + student + \"</li>\\n\")\nstudents_file.write(\"</ul>\\n\")\nstudents_file.write(\"</body>\\n\")\nstudents_file.write(\"</html>\\n\")\nstudents_file.close()",
                            "testCases": []
                        }
                    },
                    {
                        "type": "markdown",
                        "value": "Yeh `code` chala ke, ek baar \"navgurukul_students.html\" ka `code` khol ke dekho. HTML `code` padh ke upar diye gaye `python` `code` ko firse padho. Isse aapko yeh `code` aur ache se samajh aayega. Humne pehle apne HTML document ke saare tags ek ek kar ke print kare.\n\n\n\nFir opening \"\\<ul\\>\" print kar ke, hum humne `batch1_students` waali list pe `loop` chala ke har ek student ke naam ko `li` tags ke andar print kara. Abhi toh humne ek list print kari hai, aise hi hum bahot saare HTML pages `python` ka use kar ke bana sakte hain.\n\n\n\n`File` mein likhne ke baad `close` karne ki zaroorat kyun padti hai? Yeh samajhne ke liye hum pehle yeh `code` try karenge:\n\n\n\n"
                    },
                    {
                        "type": "python",
                        "value": {
                            "code": "my_file3 = open(\"test_file.txt\", \"w\")\nmy_file3.write(\"Yahan main kuch likha\")\nmy_file3.write(\"\\nYaha maine kuch aur bhi likha.\")",
                            "testCases": []
                        }
                    },
                    {
                        "type": "markdown",
                        "value": "Abhi tak humne yeh waali `file` close nahi kiya. Aapko folder mein ek `test_file.txt` naam ki ek `file` ko dikhne lag jayegi. Lekin jab aap yeh nahi `file` kholenge toh aapko woh khaali milegi Kyunki jab tak hum close ka use nahi karte, `tab` tak `python` uss `file` ko `save` nahi karta hai.\n\n\n\n"
                    },
                    {
                        "type": "python",
                        "value": {
                            "code": "my_file3.close()",
                            "testCases": []
                        }
                    },
                    {
                        "type": "markdown",
                        "value": "Ab humne is `file` ko close kar diya. Ab aap \"test_`file`.txt\" ko khol ke dekhoge toh aapko woh dikhega jo humne likha tha. Agar hum ek aisi `file` mein `write` karne ki koshih karenge jisko hum band kar chuke hain toh `python` humein `error` de degi. Yeh karne ki koshish karo:\n\n\n\n"
                    },
                    {
                        "type": "python",
                        "value": {
                            "code": "my_file3.write(\"Kuch aur likhte hain\")",
                            "testCases": []
                        }
                    },
                    {
                        "type": "markdown",
                        "value": "Aap dekhoge ki `python` `error` dikha deti hain. `Error` mein `python` bolti hai, \"Value`Error`: I/O operation on closed `file`\" Iska matlab hai ki hum ek band `file` ke saath kuch nahi kar sakte\n\n"
                    }
                ]
            },
            {
                "id": "4065",
                "parent_exercise_id": "4064",
                "course_id": "99",
                "name": "Question 1",
                "slug": "files__files/files-question1_md",
                "sequence_num": 1,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/files/files/files-question1.md",
                "solution": null,
                "content": [
                    {
                        "type": "markdown",
                        "value": "Iss text ko `people1-exercise.txt` ke naam ki `file` mein `save` karo.\n\n\n\n```\nrishabh - meerut\nimtiyaz - delhi\nnilima - cochin\nrati - shimla\nayishah - delhi\nraghu - shimla\nnaseer - kanpur\nkarthikeyan - delhi\nsalma - jaipur\npankaj - delhi\nbrijesh - delhi\ngovind - delhi\npuneet - shimla\nsiddhi - delhi\nsuman - jaipur\nrajeev - shimla\nmohinder - delhi\nrajendra - jaipur\npriyanka - shimla\nneela - delhi\nsashi - jaipur\nsarika - delhi\ndeepti - shimla\nharshad - delhi\ntrishna - raipur\npradeep - jaipur\nsekhar - delhi\nnand - delhi\nanoop - delhi\nbalwinder - tokyo\n```\nAb apne `code` se iss `file` ko kholo aur fir, uske saare contents ko print karo.\n\n"
                    }
                ]
            },
            {
                "id": "4066",
                "parent_exercise_id": "4064",
                "course_id": "99",
                "name": "Question 2",
                "slug": "files__files/files-question2_md",
                "sequence_num": 2,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/files/files/files-question2.md",
                "solution": null,
                "content": [
                    {
                        "type": "markdown",
                        "value": "Aapne jo pichle question mein `(Question 1)` `file` download kari hai, usko read karke usme number of lines count kar ke print karein. Aapne sirf uss `file` ki number of lines Count karne ka `code` likhna hai.\n\n\n\nHint: Har `\\n` ke baad nayi line shuru hoti hai. Aap yeh use kar ke nayi line ka ko pehchan sakte ho.\n\n"
                    }
                ]
            },
            {
                "id": "4067",
                "parent_exercise_id": "4064",
                "course_id": "99",
                "name": "Question 3",
                "slug": "files__files/files-question3_md",
                "sequence_num": 3,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/files/files/files-question3.md",
                "solution": null,
                "content": [
                    {
                        "type": "markdown",
                        "value": "Aapke paas ek list hai. Iss list mein har `string` ko ek `file-question3.txt` naam ki `file` mein nayi line mein daalo. Aapki list yeh rahi:\n\n\n\n"
                    },
                    {
                        "type": "python",
                        "value": {
                            "code": "banks_list = [\"Kotak\", \"HDFC\", \"RBL\", \"SBI\", \"Bank of Baroda\"]",
                            "testCases": []
                        }
                    }
                ]
            },
            {
                "id": "4068",
                "parent_exercise_id": "4064",
                "course_id": "99",
                "name": "Question 4",
                "slug": "files__files/files-question4_md",
                "sequence_num": 4,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/files/files/files-question4.md",
                "solution": null,
                "content": [
                    {
                        "type": "markdown",
                        "value": "Iss text ko `question3.txt` ke naam ki `file` mein `save` karo.\n\n\n\n```\nrishabh - meerut\nimtiyaz - delhi\nnilima - cochin\nrati - shimla\nayishah - delhi\nraghu - shimla\nnaseer - kanpur\nkarthikeyan - delhi\nsalma - jaipur\npankaj - delhi\nbrijesh - delhi\ngovind - delhi\npuneet - shimla\nsiddhi - delhi\nsuman - jaipur\nrajeev - shimla\nmohinder - delhi\nrajendra - jaipur\npriyanka - shimla\nneela - delhi\nsashi - jaipur\nsarika - delhi\ndeepti - shimla\nharshad - delhi\ntrishna - raipur\npradeep - jaipur\nsekhar - delhi\nnand - delhi\nanoop - delhi\nbalwinder - tokyo\n```\nIss `file` mein dhyaan se dekhoge toh ek insaan ka naam aur ek sheher ka naam milegaYeh sheher woh sheher hai jisme woh insaaan rehta hai. Ab aapne ek aisa `code` likhna hai jo:\n\n\n\n1. Delhi mein rehne waale logon ko ek alag `file` mein daale. Delhi waali `file` ka naam \"delhi.txt\" hona chaiye.\n\n2. Shimla mein rehne waale logon ko ek alag `file` mein daale. Shimla waali `file` na naam \"shimla.txt\" hona chaiye\n\n3. Aur saare log jo delhi aur shimla mein nahi rehte, unko ek alag `file` mein daale. Iss `file` ka naam \"others.txt\" hona chaiye\n\n\n\n**Aapko aisa `code` likhna hai, jo aisi `file` mein kitni bhi lines pe chal paye.**\n\n"
                    }
                ]
            }
        ]
    }
}